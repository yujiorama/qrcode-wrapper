definitions:
  steps:
    - step: &syntax-check
        name: syntax-check
        image: atlassian/default-image:2
        script:
          - |
            DEBIAN_FRONTEND=noninteractive
            apt-get update -y -qq
            apt-get install -y -qq shellcheck xmlstarlet
          - sh -c "$(wget -O - https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
          - task syntax-check
        artifacts:
          - 'test-reports/**'
    - step: &lint
        name: lint
        image: hadolint/hadolint:latest-alpine
        script:
          - apk add --no-cache xmlstarlet
          - sh -c "$(wget -O - https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
          - task lint
        artifacts:
          - 'test-reports/**'
    - step: &build-image
        name: build-image
        image: atlassian/default-image:2
        caches:
          - docker
        script:
          - |
            DEBIAN_FRONTEND=noninteractive
            apt-get update -y -qq
            apt-get install -y -qq shellcheck xmlstarlet
          - sh -c "$(wget -O - https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
          - task build-image
        services:
          - docker
        artifacts:
          - 'test-reports/**'
    - step: &scan-image
        name: scan-image
        image: atlassian/default-image:2
        caches:
          - docker
        script:
          - |
            TRIVY=0.14.0
            wget -O /var/tmp/trivy.tgz https://github.com/aquasecurity/trivy/releases/download/v${TRIVY}/trivy_${TRIVY}_Linux-64bit.tar.gz
          - tar -xzf /var/tmp/trivy.tgz -C /usr/local/bin
          - rm -f /var/tmp/trivy.tgz
          - sh -c "$(wget -O - https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
          - task scan-image
        services:
          - docker
        artifacts:
          - 'test-reports/**'
    - step: &test
        name: test
        image: atlassian/default-image:2
        caches:
          - docker
        script:
          - sh -c "$(wget -O - https://git.io/shellspec)" -- -d /usr/local/shellspec -b /usr/local/bin --yes
          - sh -c "$(wget -O - https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
          - xz -dc ./test-reports/qrcode-wrapper.tar.xz | docker load
          - task test
        services:
          - docker
        artifacts:
          - 'test-reports/**'
    - step: &publish-image
        name: publish-image
        deployment: test
        image: atlassian/default-image:2
        caches:
          - docker
        script:
          - sh -c "$(wget -O - https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
          - xz -dc ./test-reports/qrcode-wrapper.tar.xz | docker load
          - task publish-image
        services:
          - docker
        artifacts:
          - 'test-reports/**'

pipelines:
  tags:
    '**':
      - step: *syntax-check
      - step: *lint
      - step: *build-image
      - step: *scan-image
      - step: *test
      - step: *publish-image

  pull-requests:
    '**':
      - step: *syntax-check
      - step: *lint
      - step: *build-image
      - step: *scan-image
      - step: *test

  custom:
    renovate:
      - step:
          name: renovate
          image: renovate/renovate
          script:
            - git config --global user.email 'yujiorama+renovate-bot@gmail.com'
            - git config --global user.name 'Renovate Bot'
            - >
              renovate
              --platform bitbucket
              --username yujiorama
              --password $RENOVATE_PASSWORD
              --git-author "$(git config user.email)"
              --onboarding true
              --onboarding-config '{"extends":["config:base"]}'
              $BITBUCKET_REPO_FULL_NAME
