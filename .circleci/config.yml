version: 2.1

orbs:
  jira: circleci/jira@1.3.0

jobs:
  syntax-check:
    docker:
      - image: circleci/golang:1.15
    environment:
      SHELLCHECK: stable
    steps:
      - run:
          name: install taskfile
          command: >
            curl -fsSL --output - https://taskfile.dev/install.sh | sh -s -- -b ${HOME}/bin
      - run:
          name: install shellcheck
          command: >
            curl -fsSL --output - "https://github.com/koalaman/shellcheck/releases/download/${SHELLCHECK}/shellcheck-${SHELLCHECK}.$(uname -s | tr A-Z a-z).$(uname -m).tar.xz" |
            tar -xJvf - --strip=1 --show-transformed-names -C ${HOME}/bin shellcheck-${SHELLCHECK}/shellcheck;
            chmod 755 ${HOME}/bin/shellcheck
      - run:
          name: install reviewdog
          command: >
            curl -fsSL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b ${HOME}/bin
      - checkout
      - run:
          name: shellcheck
          command: >
            shellcheck --format=checkstyle ./qrcode-wrapper/*.sh |
            reviewdog
            -f="checkstyle"
            -name="shellcheck"
            -reporter="bitbucket-code-report"
            -filter-mode="nofilter"
            -fail-on-error="false"
            -level="warning"
  lint:
    docker:
      - image: circleci/golang:1.15
    environment:
      HADOLINT: 1.19.0
    steps:
      - run:
          name: install taskfile
          command: >
            curl -fsSL --output - https://taskfile.dev/install.sh | sh -s -- -b ${HOME}/bin
      - run:
          name: install hadolint
          command: |
            curl -fsSL --output ${HOME}/bin/hadolint "https://github.com/hadolint/hadolint/releases/download/v${HADOLINT}/hadolint-$(uname -s | tr A-Z a-z)-$(uname -m)"
            chmod +x ${HOME}/bin/hadolint
      - run:
          name: install reviewdog
          command: >
            curl -fsSL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b ${HOME}/bin
      - checkout
      - run:
          name: hadolint
          command: >
            hadolint --format=checkstyle --config .hadolint.yaml qrcode-wrapper/Dockerfile |
            reviewdog
            -f="checkstyle"
            -name="hadolint"
            -reporter="bitbucket-code-report"
            -filter-mode="nofilter"
            -fail-on-error="false"
            -level="warning"
  build:
    docker:
      - image: circleci/golang:1.15
    environment:
      TRIVY: 0.14.0
      TRIVY_ROOT: /home/circleci/trivy
      SHELLSPEC: 0.27.2
      IMAGE_NAME: qrcode-wrapper
    steps:
      - run:
          name: install taskfile
          command: >
            curl -fsSL --output - https://taskfile.dev/install.sh | sh -s -- -b ${HOME}/bin
      - run:
          name: install trivy
          command: |
            mkdir -p ${TRIVY_ROOT}
            curl -fsSL --output - "https://github.com/aquasecurity/trivy/releases/download/v${TRIVY}/trivy_${TRIVY}_$(uname -s | tr A-Z a-z)-64bit.tar.gz" | tar xzvf - -C ${TRIVY_ROOT}
            chmod 755 ${TRIVY_ROOT}/trivy
            ln -s ${TRIVY_ROOT}/trivy ${HOME}/bin/trivy
      - run:
          name: install shellspec
          command: |
            curl -fsSL --output - https://git.io/shellspec | sh -s ${SHELLSPEC} --yes -b ${HOME}/bin
      - checkout
      - store_test_results:
          path: test-reports
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: build image
          command: >
            docker build
            -f ./qrcode-wrapper/Dockerfile
            -t ${IMAGE_NAME}
            --build-arg build_date="$(date --rfc-3339=seconds)"
            --build-arg name="${CIRCLE_PROJECT_USERNAME}/${IMAGE_NAME}"
            --build-arg description="encode/decode QR code image"
            --build-arg usage="${CIRCLE_REPOSITORY_URL}/src/main/README.md"
            --build-arg url="${CIRCLE_REPOSITORY_URL}"
            --build-arg vcs_url="${CIRCLE_REPOSITORY_URL}"
            --build-arg vcs_ref="${CIRCLE_SHA1}"
            --build-arg version="${CIRCLE_TAG}"
            ./qrcode-wrapper
      - run:
          name: save image
          command: docker save ${IMAGE_NAME} > ${HOME}/${IMAGE_NAME}.tar
      - run:
          name: trivy
          command: >
            trivy image
            --exit-code 0
            --input=${HOME}/${IMAGE_NAME}.tar
            --format=template
            --template="@${TRIVY_ROOT}/contrib/junit.tpl"
            --output=./test-reports/trivy.xml
            --severity=MEDIUM,HIGH,CRITICAL
            --ignorefile=./.trivyignore
      - run:
          name: shellspec
          command: >
            shellspec
            --shell auto
            --no-banner
            --no-color
            --env IMAGE_NAME=${IMAGE_NAME}
            --format junit
            ./test/spec
            > ./test-reports/shellspec.xml

workflows:
  check:
    jobs:
      - syntax-check
      - lint
      - build:
          requires:
            - syntax-check
            - lint
          post-steps:
            - jira/notify
