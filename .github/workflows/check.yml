name: check
on:
  pull_request:
jobs:
  syntax-check:
    name: syntax-check
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: haya14busa/action-cond@v1
        id: reporter
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: "github-pr-review"
          if_false: "github-check"
      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1.5.0
        with:
          github_token: ${{ secrets.github_token }}
          reporter: ${{ steps.reporter.outputs.value }}
          level: warning
          path: qrcode-wrapper
          pattern: '*.sh'

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: haya14busa/action-cond@v1
        id: reporter
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: "github-pr-review"
          if_false: "github-check"
      - name: install reviewdog
        uses: reviewdog/action-setup@v1
      - name: hadolint
        run: >
          docker run --rm -i hadolint/hadolint < qrcode-wrapper/Dockerfile |
          reviewdog -efm="%f:%l %m"
          -name="${INPUT_TOOL_NAME}"
          -reporter="${INPUT_REPORTER}"
          -filter-mode="${INPUT_FILTER_MODE}"
          -fail-on-error="${INPUT_FAIL_ON_ERROR}"
          -level="${INPUT_LEVEL}"
          "${INPUT_REVIEWDOG_FLAGS}"
        with:
          tool_name: hadolint
          reporter: ${{ steps.reporter.outputs.value }}
          level: warning
          filter_mode: added
          fail_on_error: false
          reviewdog_flags: ''
        env:
          REVIEWDOG_GITHUB_API_TOKEN: "${{ secrets.github_token }}"
