# https://taskfile.dev

version: '3'

vars:
  IMAGE_NAME: qrcode-wrapper

tasks:
  default:
    desc: list tasks
    cmds:
      - task: list

  list:
    desc: list tasks
    cmds:
      - task --list

  syntax-check:
    desc: syntax check
    deps: []
    sources:
      - ./qrcode-wrapper/*.sh
    generates:
      - ./test-reports/{{.TASK}}/report.xml
    preconditions:
      - command -v shellcheck
      - test -e ./.shellcheckrc
      - command -v xmlstarlet
      - test -e ./.checkstyle2junit.xslt
      - mkdir -p ./test-reports/{{.TASK}}
    cmds:
      - cmd: shellcheck --format=checkstyle ./qrcode-wrapper/*.sh > ./test-reports/{{.TASK}}/checkstyle.xml
        ignore_error: true
      - xmlstarlet tr ./.checkstyle2junit.xslt < ./test-reports/{{.TASK}}/checkstyle.xml > ./test-reports/{{.TASK}}/report.xml
      - rm -f ./test-reports/{{.TASK}}/checkstyle.xml
      - readlink -f ./test-reports/{{.TASK}}/report.xml
      - cat ./test-reports/{{.TASK}}/report.xml

  lint:
    desc: lint
    deps: []
    sources:
      - ./qrcode-wrapper/Dockerfile
    generates:
      - ./test-reports/{{.TASK}}/report.xml
    preconditions:
      - command -v hadolint
      - test -e ./.hadolint.yaml
      - command -v xmlstarlet
      - test -e ./.checkstyle2junit.xslt
      - mkdir -p ./test-reports/{{.TASK}}
    cmds:
      - cmd: hadolint --format=checkstyle ./qrcode-wrapper/Dockerfile > ./test-reports/{{.TASK}}/checkstyle.xml
        ignore_error: true
      - xmlstarlet tr ./.checkstyle2junit.xslt < ./test-reports/{{.TASK}}/checkstyle.xml > ./test-reports/{{.TASK}}/report.xml
      - rm -f ./test-reports/{{.TASK}}/checkstyle.xml
      - readlink -f ./test-reports/{{.TASK}}/report.xml
      - cat ./test-reports/{{.TASK}}/report.xml

  build-image:
    desc: build image
    deps: []
    env:
      BUILD_DATE:
        sh: date --rfc-3339=seconds
      BITBUCKET_COMMIT:
        sh: git log -n 1 --format=%h
      BITBUCKET_TAG: v0.0.1
      BITBUCKET_GIT_HTTP_ORIGIN: BITBUCKET_GIT_HTTP_ORIGIN
      BITBUCKET_GIT_SSH_ORIGIN: BITBUCKET_GIT_SSH_ORIGIN
    sources:
      - ./qrcode-wrapper/Dockerfile
      - ./qrcode-wrapper/*.sh
    generates:
      - ./test-reports/{{.IMAGE_NAME}}.tar.xz
    preconditions:
      - command -v docker
      - mkdir -p ./test-reports
    cmds:
      - >
        docker build
        -f ./qrcode-wrapper/Dockerfile
        -t {{.IMAGE_NAME}}
        --build-arg build_date="{{.BUILD_DATE}}"
        --build-arg name="yujiorama/{{.IMAGE_NAME}}"
        --build-arg description="encode/decode QR code image"
        --build-arg usage="{{.BITBUCKET_GIT_HTTP_ORIGIN}}/src/main/README.md"
        --build-arg url="{{.BITBUCKET_GIT_HTTP_ORIGIN}}"
        --build-arg vcs_url="{{.BITBUCKET_GIT_SSH_ORIGIN}}"
        --build-arg vcs_ref="{{.BITBUCKET_COMMIT}}"
        --build-arg version="{{.BITBUCKET_TAG}}"
        ./qrcode-wrapper
      - docker save {{.IMAGE_NAME}} | xz -c > ./test-reports/{{.IMAGE_NAME}}.tar.xz
      - readlink -f ./test-reports/{{.IMAGE_NAME}}.tar.xz

  scan-image:
    desc: image scan
    deps: []
    sources:
      - ./test-reports/{{.IMAGE_NAME}}.tar.xz
    generates:
      - ./test-reports/{{.TASK}}/report.xml
    preconditions:
      - command -v trivy
      - test -e /usr/local/bin/contrib/junit.tpl
      - test -e ./test-reports/{{.IMAGE_NAME}}.tar.xz
      - mkdir -p ./test-reports/{{.TASK}}
    cmds:
      - xz -dc ./test-reports/{{.IMAGE_NAME}}.tar.xz > ./test-reports/{{.IMAGE_NAME}}.tar
      - cmd: >
          trivy image
          --exit-code 0
          --input=./test-reports/{{.IMAGE_NAME}}.tar
          --format=template
          --template="@/usr/local/bin/contrib/junit.tpl"
          --output=./test-reports/{{.TASK}}/report.xml
          --severity=MEDIUM,HIGH,CRITICAL
          --ignorefile=./.trivyignore
        ignore_error: true
      - rm -f ./test-reports/{{.IMAGE_NAME}}.tar
      - readlink -f ./test-reports/{{.TASK}}/report.xml
      - cat ./test-reports/{{.TASK}}/report.xml

  test:
    desc: test
    deps: []
    sources:
      - './test/.shellspec'
      - './test/spec/**/*'
      - './test/lib/**/*'
    generates:
      - ./test-reports/{{.TASK}}/report.xml
    preconditions:
      - command -v docker
      - command -v shellspec
      - test -e ./test-reports/{{.IMAGE_NAME}}.tar.xz
      - mkdir -p ./test-reports/{{.TASK}}
    cmds:
      - xz -dc ./test-reports/{{.IMAGE_NAME}}.tar.xz | docker load
      - cmd: >
          shellspec
          --shell auto
          --no-banner
          --no-color
          --env IMAGE_NAME={{.IMAGE_NAME}}
          --format j
          ./test/spec
          > ./test-reports/{{.TASK}}/report.xml
        ignore_error: true
      - readlink -f ./test-reports/{{.TASK}}/report.xml
      - cat ./test-reports/{{.TASK}}/report.xml

  publish-image:
    desc: publish image
    deps: []
    env:
      DOCKER_USERNAME: username
      DOCKER_PASSWORD: password
      BITBUCKET_TAG: v0.0.1
    generates:
      - ./test-reports/{{.TASK}}/result.txt
    preconditions:
      - command -v docker
      - test -e ./test-reports/{{.IMAGE_NAME}}.tar.xz
      - mkdir -p ./test-reports/{{.TASK}}
    cmds:
      - echo {{.DOCKER_PASSWORD}} | docker login --username {{.DOCKER_USERNAME}} --password-stdin
      - xz -dc ./test-reports/{{.IMAGE_NAME}}.tar.xz | docker load
      - docker tag {{.IMAGE_NAME}}:latest docker.io/{{.DOCKER_USERNAME}}/{{.IMAGE_NAME}}:{{.BITBUCKET_TAG}}
      - docker push docker.io/{{.DOCKER_USERNAME}}/{{.IMAGE_NAME}}:{{.BITBUCKET_TAG}} > ./test-reports/{{.TASK}}/result.txt

  clean:
    desc: clean
    deps: []
    cmds:
      - rm -rf ./test-reports
      - cmd: docker rmi -f {{.IMAGE_NAME}}
        ignore_error: true
